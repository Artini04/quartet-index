@use "./root" as root;
@use "sass:string";

@mixin flex($dir, $wrap, $gap) {
  & {
    display: flex;
    flex-flow: #{$dir} #{$wrap};
    gap: #{$gap};
  }
}

@mixin inline-flex($dir, $wrap, $gap) {
  & {
    display: inline-flex;
    flex-flow: #{$dir} #{$wrap};
    gap: #{$gap};
  }
}

@mixin flex-align($align: auto, $justify: auto) {
  & {
    align-items: #{$align};
    justify-content: #{$justify};
  }
}

@mixin space($property, $gap) {
  & > * + * {
    #{$property}: #{$gap};
  }
}

// @mixin with-border($color: transparent) {
//   & {
//     border: root.$border-thick solid #{$color};
//     border-radius: root.$border-radius;
//   }
// }

@mixin with-focus($property, $normal, $focus) {
  & {
    #{$property}: #{$normal};

    &:focus-within {
      #{$property}: #{$focus};
    }
  }
}

@mixin with-hover($property, $normal, $focus) {
  & {
    #{$property}: #{$normal};

    &:hover {
      #{$property}: #{$focus};
    }
  }
}

@mixin animation($properties, $duration: root.$animation-speed) {
  & {
    transition-timing-function: ease;
    transition-duration: #{$duration};
    transition-property: string.unquote($properties);
  }
}

@mixin with-icon($spacing: 0.4em, $margin-end: -0.12em) {
  .iconify {
    display: inline-block;
    margin-block-end: #{$margin-end};
  }

  & > * + * {
    margin-left: #{$spacing};
  }
}

@mixin with-border($color: transparent, $padding: 0.6em 1em) {
  & {
    border: 1px solid #{$color};
    border-radius: root.$border-radius;
  }

  & {
    padding: #{$padding};
  }
}

@mixin on-hover($property, $normal, $focus) {
  & {
    #{$property}: #{$normal};

    &:hover {
      #{$property}: #{$focus};
    }
  }
}
